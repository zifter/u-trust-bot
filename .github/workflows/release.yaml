name: DeployðŸš€

on:
  push:
    branches:
      - main
  release:
    types: [published]

concurrency:
  group: ci-deployment-${{ github.ref }}
  cancel-in-progress: true

env:
  BOT_IMAGE_TAG: ${{ secrets.GCP_ARTIFACT_REGISTRY }}/bot/bot:${{ github.ref_name }}-${{ github.sha }}
  E2E_IMAGE_TAG: ${{ secrets.GCP_ARTIFACT_REGISTRY }}/bot/e2e:${{ github.ref_name }}-${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: 'Prepare Local Workspace'
        run: touch .env

      - name: Build Bot Image
        run: make bot-image-build BOT_IMAGE_TAG=${BOT_IMAGE_TAG}

      - name: Test Bot Image
        run: make bot-image-test BOT_IMAGE_TAG=${BOT_IMAGE_TAG}

      - name: Build e2e Image
        run: make e2e-image-build E2E_IMAGE_TAG=${E2E_IMAGE_TAG}

      - name: Test e2e Image
        run: make e2e-image-test E2E_IMAGE_TAG=${E2E_IMAGE_TAG}

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Push Images
        id: bot-push-image
        run: |
          make podman-login GCP_ARTIFACT_REGISTRY=${{ secrets.GCP_ARTIFACT_REGISTRY }}
          make bot-image-push BOT_IMAGE_TAG=${BOT_IMAGE_TAG}
          make e2e-image-push E2E_IMAGE_TAG=${E2E_IMAGE_TAG}

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: build
    environment: ${{ github.ref_type == 'tag' && 'prod' || 'staging' }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: 'Prepare Local Workspace'
        run: touch .env

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Deploy App'
        env:
          TF_STATE_APP_BUCKET: ${{ secrets.TF_STATE_APP_BUCKET }}
          TF_VAR_env_name: ${{ github.ref_type == 'tag' && 'prod' || 'staging' }}
          TF_VAR_gcp_sa_credentials: ${{ steps.auth.outputs.credentials_file_path  }}
          TF_VAR_gcp_project_name: ${{ secrets.TF_VAR_gcp_project_name }}
          TF_VAR_telegram_token: ${{ secrets.TF_VAR_telegram_token }}
          TF_VAR_bot_image: ${{ env.BOT_IMAGE_TAG }}
        run: make app-tf-init app-tf-plan app-tf-apply

  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: deploy
    environment: ${{ github.ref_type == 'tag' && 'prod' || 'staging' }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: 'Prepare Local Workspace'
        run: touch .env

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Run e2e
        env:
          TELEGRAM_APP_ID: ${{ secrets.E2E_TELEGRAM_APP_ID }}
          TELEGRAM_APP_HASH: ${{ secrets.E2E_TELEGRAM_APP_HASH }}
          TELEGRAM_APP_SESSION: ${{ secrets.E2E_TELEGRAM_APP_SESSION }}
          UTRUST_BOT_NAME: ${{ secrets.E2E_UTRUST_BOT_NAME }}
        run: |
          make podman-login GCP_ARTIFACT_REGISTRY=${{ secrets.GCP_ARTIFACT_REGISTRY }}
          make e2e-image-run E2E_IMAGE_TAG=${E2E_IMAGE_TAG}

  notify-pipeline-result:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build,deploy,e2e]
    if: always()
    steps:
      - name: Send Telegram message after pipeline
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CI_CD_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_CI_CD_BOT_TOKEN }}
          format: markdown
          message: |
            *Repository:* [${{ github.repository }}](https://github.com/${{ github.repository }})
            *Commit:* [${{ github.event.commits[0].message }}](https://github.com/${{ github.repository }}/commit/${{github.sha}})
            *Workflow:* [${{ github.workflow }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            *Environment:* [${{ github.ref_type == 'tag' && 'prod' || 'staging' }}](https://github.com/${{ github.repository }}/deployments/activity_log?environment=${{ github.ref_type == 'tag' && 'prod' || 'staging' }})

            *Build*  - [${{ needs.build.result }}](https://github.com/zifter/u-trust-bot/actions/runs/${{ github.run_id }}/jobs/)
            *Deploy* - [${{ needs.deploy.result }}](https://github.com/zifter/u-trust-bot/actions/runs/${{ github.run_id }}/jobs/)
            *e2e*    - [${{ needs.e2e.result }}](https://github.com/zifter/u-trust-bot/actions/runs/${{ github.run_id }}/jobs/)
